本模块可以在相同配置下, 对不同机房根据指定的逻辑将流
量分配到不同的后端

1. 傻瓜模式
   当本机房有后端且能承担本机房入口所有流量时, 所有请
   求只转发到本机房后端, 其他机房自动标记为 backup, 仅在
   本机房所有后端不可用时使用; 如果本机房没有后端, 则使
   用所有后端, 按预定义的 weight.

2. 高级需求
   支持对于任意机房的入请求, 按预设比例转发部分或全
   部流量到指定机房. 需要手动写出请求转发规则. 

   为了防止产生不确定性和歧义, 以及配置的可维护性, 去掉
   了最初版本中的一些"智能"功能, 所有傻瓜模式不能满足的
   需求, 需要由管理员写出明确直观的规则.
   
3. 使用详解
   a. 为了区分不同机房或网络, 引入了配置项 net_topology
      * 语法: net_topology name [default] {
                default           /unk;
                10.11.0.0/16      /cnc/bj/tc;
                10.14.0.0/16      /ctc/bj/djt;
              }
      * 位置: http 域内 (同 upstream)
      * 说明:
              第一个参数是为该拓扑起的名字, 可以在后面被其
              他指令引用
              第二个参数为可选, 用于指定该拓扑为后续的默认

              内容每行为一个网段, 第二列为描述. 描述以/作为
              分隔符, 没有格式和长度要求, 主要用于区分不同
              机房

              模块在工作时, 会依据指定的 net_topology 来判断本
              服务器以及各后端所在的机房. 映射为相同描述的
              网段即被视为同一机房

      * 注意:
              * 不能有两个 net_topology 项同时标记为 default
              * 未指定 default 时默认使用第一个
              * 所有后端及服务器本身的地址, 在指定的
                net_topology 中必须都有映射
              * 我们自己所有包含了该模块的 nginx 包, 安装后 
                conf 下会有一个 conf/netrb.conf.sample, 定义了一个比
                较完整的 net_topology, 使用时可以将其 mv 为
                conf/netrb.conf, 然后在 nginx.conf 中 include 即可.
                注意作用域

   b. 在指定 upstream 里启用傻瓜模式
      * 语法: rebalance [off] [net_topology_name];
      * 位置: 欲启用该功能的 upstream 内
      * 说明:
              * 该指令在所在 upstream 内启用傻瓜功能, 参数为前
                述 net_topology 定义的拓扑, 可以省略. 省略时使用
                默认 net_topology (见前述说明)
      * 注意:
              * 该模块与已有的 keepalive 等模块不冲突, 但是配
                置时建议配置在紧接着 server 下面 (直观)
              * 仅适用该指令时, 所有前端必须都有本地后端  
              * 可以使用 rebalance off 来快速关闭本模块(不用把
                所有指定都注掉), 所以不要定义名字为 off 的
                net_topology (会有提示). 使用 off 时必须作为第二
                个参数

   c. 复杂指定流量分配
      * 语法: assign in out1=10% out2=60% out3;
      * 位置: 欲启用该功能的 upstream 内
      * 说明:
              * 该指令的作用是, 对 in 机房的前端请求, 10% 打到
                out1 机房后端, 60% 打到 out2 机房后端, 其余流量
                打到 out3 机房后端
              * 最后一个 out 机房的比重可以省略, 为其他剩余流量
              * 最后一个 out 机房可以用 * 来代替其他所有未指
                定的机房后端
              * 可以用 * 来匹配所有未被匹配到的 in 机房.
              * 该指令可以单独使用或者和 rebalance 配合使用
                单独使用时相当于系统自动添加了一句不带参数
                的 rebalance; (使用默认 net_topology)
              * 同一 upstream 可以连续使用 assign 来为不同机房
                分配入流量, 匹配时按书写顺序依次检测, 第一
                条匹配成功后停止
              * 所有未分配流量的后端, 都会被标记为 backup, 在
                所有指定机房故障时备用
      * 注意:
              * 使用了 assign 的前端机房, 指定的后端百分比之
                和必须为 100%
              * 使用本模块时, 任意前端机房的入流量或者通过 
                assign 手动分配流量, 或者能满足傻瓜模式
              * 指令中的 in 或者 out 不是随意指定, 而是根据本
                upstream 所使用的 net_topology 描述使用, 但可以简
                写. 比如前例中定义了 /cnc/bj/tc 和 /ctc/bj/djt, 就
                可以用 tc 和 djt 分别代表这两个网段或机房. 也
                可以用 bj/tc 或 cnc/bj/tc 来表示 tc. 简写的原则是
                从右向左以 / 划分, 以在描述中不会产生歧义为
                准. 比如如果描述中定义了 /cnc/bj, /ctc/bj, 那么单
                独写 bj 就会产生歧义, 这时不会报错, 以第一条
                匹配的为准. 另外一种简单办法就是只定义 uniq 的
                一层, 比如 /djt, /tc9, /tc11 等

   d. 其他说明
      * 该模块仅在配置解析时自动修正各后端的 backup 属性和
        weight, 不会对运行时产生其他影响
      * ./sbin/nginx -t 时会在 error_log 里打印本模块对 upstream 的
        所有修改, 便于上线前的逻辑确认
      * 本模块不会对已经在配置中标记为 down 或者 backup 的后
        端进行变更
   e. xxx
